[tox]
envlist = py27,flake8,pylint
skipsdist = True

[testenv]
usedevelop = True
sitepackages = False
setenv =
    VIRTUAL_ENV={envdir}
requirements_files =
    -r{toxinidir}/requirements.txt
test_requirements_files =
    -r{toxinidir}/test_requirements.txt
deps =
    {[testenv]requirements_files}
    {[testenv]test_requirements_files}
install_command = pip install --use-wheel {opts} {packages}
commands = nosetests --with-xunit --xunit-file=continuous_integration/reports/unit_tests
packages = {{ cookiecutter.project_slug }}
whitelist_externals =
    cp
    rm
    mkdir
    bash
    echo

[testenv:flake8]
deps =
    pep8>=1.6.2
    flake8>=2.4.1
commands =
    rm -fr continuous_integration/reports/flake8
    mkdir -p continuous_integration/reports/flake8
    bash -c -o pipefail "flake8 {[testenv]packages} | tee continuous_integration/reports/flake8/index.txt"

[testenv:pylint]
deps =
    pylint>=1.4.3
    {[testenv]requirements_files}

commands =
    rm -fr continuous_integration/reports/pylint
    mkdir -p continuous_integration/reports/pylint
    bash -c "pylint --rcfile=continuous_integration/pylint.conf {[testenv]packages} {posargs:> continuous_integration/reports/pylint/index.html} || [ $(($? & (1 | 2 | 4 | 8 | 32))) -eq 0 ]"

[testenv:coverage]
commands =
    nosetests --with-coverage --cover-package={[testenv]packages}
    cp .coverage .coverage.unit_tests
    coverage html --title "Unit Tests Coverage Report" --directory continuous_integration/reports/coverage/unit_test {posargs:--fail-under=80}
    echo "Test results report: file://{toxinidir}/continuous_integration/reports/coverage/unit_test/index.html"

[testenv:coverage-combine]
deps = coverage
commands =
    coverage combine
    coverage html --title "Full Coverage Report" --directory continuous_integration/reports/coverage/full {posargs:--fail-under=80}
    echo "Test results report: file://{toxinidir}/continuous_integration/reports/coverage/full/index.html"

[testenv:radon]
commands =
    rm -fr continuous_integration/reports/radon
    mkdir -p continuous_integration/reports/radon
    bash -c "radon cc -s -e={[testenv]packages}/test/* {[testenv]packages} > continuous_integration/reports/radon/radon.cc"
    bash -c "radon mi -s -e={[testenv]packages}/test/* {[testenv]packages} > continuous_integration/reports/radon/radon.mi"

[testenv:{{ cookiecutter.project_slug.replace('_', '-') }}]
deps =
    {[testenv]requirements_files}
commands = {{ cookiecutter.project_slug.replace('_', '-') }} {posargs}

[testenv:{{ cookiecutter.project_slug.replace('_', '-') }}-coverage]
commands =
    coverage run --source={[testenv]packages} {envbindir}/{{ cookiecutter.project_slug }} {posargs}
    cp .coverage .coverage.system_tests
    coverage html --title "System Tests Coverage Report" --directory continuous_integration/reports/coverage/system_tests
    echo "Test results report: file://{toxinidir}/continuous_integration/reports/coverage/system_tests/index.html"

[flake8]
show-source = True
statistics = True
verbose = 1
max-line-length = 80
